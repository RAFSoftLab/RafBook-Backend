name: Manual Deploy to Cloud Server

on:
  workflow_dispatch:
    inputs:
      services:
        description: |
          Comma-separated list of services to restart.
          Available services:
          - app
          - prometheus
          - grafana
          - opensearch
          - opensearch-dashboards
          - filebeat
          - postgres
        required: true
        default: 'app'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: pstamenic1524m/rafbook

    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Debug files
        run: ls -R

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Generate image tag
        id: generate_tag
        run: echo "tag=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.generate_tag.outputs.tag }} -f app/Dockerfile app
          docker push $IMAGE_NAME:${{ steps.generate_tag.outputs.tag }}

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Upload updated docker-compose.yml
        run: |
          TAG=${{ steps.generate_tag.outputs.tag }}

          # Replace image line in the docker-compose for the app service
          awk -v tag="$TAG" -v name="$IMAGE_NAME" '
            BEGIN { in_app=0 }
            /^  app:/ { in_app=1; print; next }
            in_app && /^\s*image:/ {
              print "    image: " name ":" tag;
              next
            }
            in_app && /^\s*(build|container_name|ports|volumes|networks|depends_on|environment):/ { in_app=0 }
            { print }
          ' docker-compose.yml > docker-compose.remote.yml

          # Upload to remote
          sshpass -p "${{ secrets.DEPLOY_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }} "mkdir -p ~/deployment"
          sshpass -p "${{ secrets.DEPLOY_PASSWORD }}" scp -o StrictHostKeyChecking=no docker-compose.remote.yml ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DE
